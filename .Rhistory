git pull
readr::read_delim("~/Git projects/Assignments ARE/Assignments 1/appointments.csv")
readr::read_delim("~/Git projects/Assignments ARE/Assignments 1/appointments.csv", dlim = ",")
readr::read_delim("~/Git projects/Assignments ARE/Assignments 1/appointments.csv", delim = ",")
readr::read_delim("~/Git projects/Assignments ARE/Assignment 1/appointments.csv", delim = ",")
d <- readr::read_delim("~/Git projects/Assignments ARE/Assignment 1/appointments.csv", delim = ",")
head(d)
names(d)
xaringan:::inf_mr()
map(1:6, ~ runif(6)
)
map(1:6, ~ runif(6))
set.seed(123)
xs <- map(1:6, ~ runif(6))
xs[[1]][[1]] <- NA
ws <- map(1:6, ~ rpois(6, 5) + 1)
map2_dbl(xs, ws, weighted.mean)
lapply(1:3, '+')
lapply(1:3, '+')
1+
1
lapply(1:3, invisible(1))
lapply(1:3, function() invisible(1))
lapply(1:3, function(z) invisible(1))
lapply(1:3, function(z) letters[z] <<- z)
lapply(1:3, function(z) paste(letters[z]) <<- z)
get(letters, 1)
paste(letters[1])
lapply(1:3, function(z) paste(letters[z]) <<- z)
deparse(letters]1)
deparse(letters[1])
deparse(substitute(letters[1]))
deparse(substitute(paste(letters[1])))
substitute(letters[1])
?assign_in()
environment()
assign_in('R_GlobalEnv', "a", 1)
assign_in('R_GlobalEnv', 1, 1)
assign_in('R_GlobalEnv', 1, "a")
lapply(1:3, function(z) assign(letters[z], z))
?assign()
globalenv()
lapply(1:3, function(z) assign(letters[z], z, envir = globalenv()))
invisible(lapply(1:3, function(z) assign(letters[z], z, envir = globalenv())))
map(1:3, assign(letters[z], z, envir = globalenv()))
map(1:3, assign(letters[x], x, envir = globalenv()))
map(1:3, assign(letters[.x], .x, envir = globalenv()))
?map()
map(1:3, ~ assign(letters[.x], .x, envir = globalenv()))
walk(1:3, assign(letters[z], z, envir = globalenv()))
walk(1:3, assign(letters[.x], .x, envir = globalenv()))
walk(1:3, ~ assign(letters[.], ., envir = globalenv()))
walk(1:3, ~ assign(letters[.x], .x, envir = globalenv()))
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
options(htmltools.dir.version = FALSE)
# packages
# packages needed
library(dplyr)
library(purrr)
library(readr)
ABC <- function(x) {
assign(letters[z], z, envir = globalenv())
}
invisible(
lapply(1:3, ABC)
)
ABC <- function(x) {
assign(letters[x], x, envir = globalenv())
}
invisible(
lapply(1:3, ABC)
)
walk(1:3, ABC)
ABC <- function(x) {
assign(letters[x], x, envir = globalenv())
}
1:26 %>% walk(1:3, ABC)
1:26 %>% walk(., ABC)
1:26 %>% walk(., ABC) %>% cat(.)
1:26 %>% invisible(
lapply(1:3, ABC)
) %>% cat(.)
?pmap_dbl()
trims <- c(0, 0.1, 0.2, 0.5)
x <- rcauchy(1000)
pmap_dbl(list(trim = trims), mean, x = x)
pmap_dbl(list(trim = trims), mean, x = x)
x
params
?tibble::tribble()
modify(mtcars, 1)
modify(mtcars, 1)
mtcars
cars2018 <- readr::read_csv("~/ARE/data/cars2018.csv")
modify(cars2018, 1)
?modify
modify(mtcars, 1)
map_lgl(mtcars, is.double)
a<-knitr::opts_chunk
xaringan:::inf_mr()
cars2018
unique(cars2018$Aspiration)
tm <- split(cars2018, cars2018$Transmission)
knitr::opts_chunk$set(warning=FALSE, message=FALSE)
options(htmltools.dir.version = FALSE)
# packages
# packages needed
library(dplyr)
library(purrr)
library(readr)
t <- tempfile()
dir.create(t)
tm <- split(cars2018, cars2018$Transmission)
paths <- file.path(t,
paste0(names(tm), ".csv"))
paths
walk2(tm, paths, write.csv)
dir(temp)
cars2018$Transmission
install.packages('icon')
devtools::install_github("ropenscilabs/icon")
icon::ai_academia()
??icon
?icon
environment()
devtools::install_github("RLesur/klippy")
cars
data("band_instruments")
band_instruments
data()
data("JohnsonJohnson")
JohnsonJohnson
longley
sleep
swiss
plot(swiss$Fertility, swiss$Catholic)
plot(swiss)
women
plot(women)
storms
BJsales
library(AER)
data("CASchools")
load("~/Downloads/CASchools.Rdata")
# (a)
# Vektoren definieren
Geschwindigkeit <- c(20, 30, 50, 80, 100)
Bremsweg <- c(5, 10, 25, 60, 10)
# Modell schÃ¤tzen
mod <- lm(Bremsweg ~ Geschwindigkeit)
residuals(mod)
s <-summary(mod)
s$residuals
# (b)
res <- residuals(mod)
res <- s$residuals
sum(res)
s <-summary(mod)
s
fitted(mod)
?predict()
predict(mod, newdata = c("Bremsweg"=60))
predict(mod, newdata = c("Bremsweg"=60))
mod
predict(mod, newdata = c("Geschwindigkeit"=60))
# (c)
neu <- data.frame("Geschwindigkeit" = 60)
neu
predict(mod, newdata = neu)
# (e)
plot(Geschwindigkeit, Bremsweg)
abline(mod)
[[<-.
?[[<-.
??[[<-.
??[[
sloop::s3_methods_class("[[")
sloop::s3_methods_class([[)
sloop::s3_methods_class("[")
sloop::s3_dispatch(1:10[1])
sloop::s3_dispatch(list(1:10)[1])
sloop::s3_dispatch(list(1:10)[[1]])
sloop::s3_get_method("[[.list")
sloop::s3_get_method("[[")
install.packages("lobster")
install.packages("lobstr")
x <- data.frame(x=1:3,y=3:5)
tracemem(x)
x[[1]]
x[[1]] - x[[2]]
cat(tracemem(x), "\n")
x[[1]] - x[[2]]
tracemem(x)
tracemem(x)
for (i in 1:2) {
x[[i]] <- x[[i]] - medians[[i]]
}
medians <- vapply(x, median, numeric(1))
for (i in 1:2) {
x[[i]] <- x[[i]] - medians[[i]]
}
?tracemem
for (i in 1:2) {
x[[i]] <- x[[i]]
}
tracemem(x)
for (i in 1:2) {
x[[i]] <- x[[i]]
}
tracemem(x)
x
x[[1]] <- 1:3
rm(x)
y <- data.frame(x=1:3,y=3:5)
tracemem(y)
y[[2]] <- 2:4
y <- data.frame(x=1:3,y=3:5)
tracemem(y)
tracemem(y[[1]])
y[[2]] <- y[[1]]
tracemem(y)
tracemem(y)
y[1,1] <- pi
tracemem(y)
tracemem(y)
tracemem(y[1,1])
y[1,1] <- pi
tracemem(y)
tracemem(y[[1]])
tracemem(y[[1]])
tracemem(y)
tracemem(y)
tracemem(y[[1]])
y[1,1] <- pi
tracemem(y)
<-.data.frame
`<-.data.frame`
`<-.data.frame`
sloop::s3_get_method(<-.data.frame)
sloop::s3_get_method("<-.data.frame")
sloop::s3_get_method("<-.")
`[.data.frame`
`<-.data.frame`
getAnywhere(`[.data.frame`)
getAnywhere(`<-.data.frame`)
getAnywhere(`[<-.data.frame`)
`[<-.data.frame`
.Internal(inspect(1:10))
a <- 1:10
.Internal(inspect(a))
x <- 1:5 # (1)
.Internal(inspect(x))
x <- 1:5 # (1)
.Internal(inspect(x))
f <- data.frame(x=1,y=2)
.Internal(inspect(f))
.Internal(inspect(data.frame(x=1,y=2)))
f <- data.frame(x=1,y=2)
tracemem(f)
f[1,1] <- 1
f <- data.frame(x=1:3,y=2:4)
tracemem(f)
f[1,1] <- 1
